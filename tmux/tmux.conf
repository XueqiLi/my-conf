##########
# Key Binding
##########
bind a send-prefix
set -g prefix ^a
set-option -gw xterm-keys on
unbind ^b
unbind '"'
unbind %
bind - splitw -v # 分割成上下两个窗口
bind \ splitw -h # 分割成左右两个窗口

# 绑定hjkl键为面板切换的上下左右键
bind -r k select-pane -U # 绑定k为↑
bind -r j select-pane -D # 绑定j为↓
bind -r h select-pane -L # 绑定h为←
bind -r l select-pane -R # 绑定l为→

# 绑定Ctrl+hjkl键为面板上下左右调整边缘的快捷指令
bind -r ^k resizep -U 10 # 绑定Ctrl+k为往↑调整面板边缘10个单元格
bind -r ^j resizep -D 10 # 绑定Ctrl+j为往↓调整面板边缘10个单元格
bind -r ^h resizep -L 10 # 绑定Ctrl+h为往←调整面板边缘10个单元格
bind -r ^l resizep -R 10 # 绑定Ctrl+l为往→调整面板边缘10个单元格

bind ^u swapp -U # 与上窗格交换 Ctrl-u
bind ^d swapp -D # 与下窗格交换 Ctrl-d

unbind r
bind r source-file ~/.tmux.conf

unbind M-1
unbind M-2
unbind M-3
unbind M-4
unbind M-5
unbind M-6
unbind M-7
unbind M-8
unbind M-9
unbind M-j
unbind M-k
unbind M-h
unbind M-l

bind-key -n M-1 select-window -t :1
bind-key -n M-2 select-window -t :2
bind-key -n M-3 select-window -t :3
bind-key -n M-4 select-window -t :4
bind-key -n M-5 select-window -t :5
bind-key -n M-6 select-window -t :6
bind-key -n M-7 select-window -t :7
bind-key -n M-8 select-window -t :8
bind-key -n M-9 select-window -t :9
bind-key -n M-k selectp -U # 选择上窗格
bind-key -n M-j selectp -D # 选择下窗格
bind-key -n M-h selectp -L # 选择左窗格
bind-key -n M-l selectp -R # 选择右窗格

unbind-key Up
unbind-key Down 
unbind-key Left
unbind-key Right


bind -r Left  previous-window
bind -r Right next-window


bind C-c run -b "tmux show-buffer | xclip -i -selection clipboard"
bind C-v run "tmux set-buffer \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"




##########
# Style
##########
#set -g status-right "#[fg=black]#(date)#[default] • #[fg=black]#(acpi)#[default] • #[fg=black]#(cut -d ' ' -f 1-3 /proc/loadavg)#[default]"


set -g status-right "#[fg=white]#(date)#[default] | #{battery_percentage} | #{cpu_percentage} #{cpu_icon}"
set -g status-right-length 128
set -g status-bg "#505050"
set -g status-fg white
set -wg window-status-current-style "bg=white,fg=black"
set -g pane-active-border-fg white
set -g pane-border-fg "#505050"
set-window-option -g mode-style "fg=black,bg=white"
set -g message-style "bg=white, fg=black"





#message-command-style (yellow on black)
#mode-style

##########
# Set
#########
#bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e; send-keys -M'" # use mouse to scroll 

set-option -g mouse on
set -g terminal-overrides 'rxvt*:smcup@:rmcup@'
set -g base-index 1
set -s escape-time 0
setw -g aggressive-resize on

set -g update-environment "DISPLAY WINDOWID XAUTHORITY DBUS_SESSION_BUS_ADDRESS SESSION_MANAGER GNOME_KEYRING_CONTROL GPG_AGENT_INFO SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION"

set -g set-titles on
setw -g automatic-rename

set -g history-limit 500000
set-option -g default-shell "/usr/local/bin/zsh"
set -g default-terminal "screen-256color"


# Allow scroll in less, vi, man

tmux_commands_with_legacy_scroll="nano less man"
bind-key -T root WheelUpPane \
    if-shell -Ft= '#{?mouse_any_flag,1,#{pane_in_mode}}' \
            'send -Mt=' \
                    'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
                                "send -t= Up Up Up" "copy-mode -et="'
                                bind-key -T root WheelDownPane \
                                    if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
                                            'send -Mt=' \
                                                    'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
                                                                "send -t= Down Down Down" "send -Mt="'


##########
# Copy in VI style
##########
setw -g mode-keys vi # 开启vi风格后，支持vi的C-d、C-u、hjkl等快捷键
bind Escape copy-mode # 绑定esc键为进入复制模式
#bind -t vi-copy v begin-selection # 绑定v键为开始选择文本
#bind -t vi-copy y copy-selection # 绑定y键为复制选中文本
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind p pasteb # 绑定p键为粘贴文本（p键默认用于进入上一个窗口，不建议覆盖）


##########
# For Mac
##########
set -g default-command "reattach-to-user-namespace -l $SHELL"
# buffer缓存复制到Mac系统粘贴板
bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
# Mac系统粘贴板内容复制到会话
bind C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - \; paste-buffer -d"
# 绑定y键为复制选中文本到Mac系统粘贴板
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'
# 鼠标拖动选中文本，并复制到Mac系统粘贴板
bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "pbcopy"



##########
# New Section
##########

#new -s work
#splitw -v -p 50 -t 0 
#splitw -h -p 50 -t 0
#splitw -h -p 50 -t 2
#neww
#splitw -v -p 50 -t 0
#splitw -h -p 50 -t 0
#splitw -h -p 50 -t 2
#neww "ydcv"
#selectw -t 1
#selectp -t 3

##########
# TPM
##########

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-cpu'


# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'


